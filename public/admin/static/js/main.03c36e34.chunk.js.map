{"version":3,"sources":["components/Header.jsx","components/Sidebar.jsx","components/Divider.jsx","types.js","hooks/useFormFields.js","components/Page.jsx","api/pages.js","components/FormField.jsx","components/Content.jsx","App.jsx","api/templates.js","index.js"],"names":["Header","className","Sidebar","pages","setPages","activePage","setActivePage","newIndex","length","width","height","src","alt","onClick","newPage","id","title","index","content","selector","props","name","value","children","Divider","map","page","CHANGE","SET_FIELDS","SET_MODE","RESET","reducer","state","type","payload","values","JSON","parse","stringify","mode","onChange","init","errors","setFormFields","e","dispatch","target","onSubmit","onSuccess","_id","rest","axios","patch","then","res","data","sort","a","b","catch","console","error","updatePage","post","find","createPage","Page","templates","initialFormValues","useReducer","useFormFields","templateId","useEffect","saveButtonClassName","delete","deletePage","FormField","label","field","template","contentField","prop","onTemplateChange","Content","fieldIndex","FieldList","disabled","propIndex","placeholder","newContent","splice","child","childIndex","App","useState","setTemplates","get","getPages","getTemplates","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03c36e34.chunk.js","sourcesContent":["export function Header() {\n  return <header className=\"header\">Next Chapter</header>\n}\n","import { Divider } from \".\"\n\nexport function Sidebar({ pages, setPages, activePage, setActivePage }) {\n  const newIndex = pages.length\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <h3>Pages</h3>\n        <img\n          width=\"20\"\n          height=\"20\"\n          src=\"images/icons/plus-circle.svg\"\n          alt=\"add\"\n          className=\"sidebar__header__add\"\n          onClick={() => {\n            const newPage = {\n              id: `new${newIndex}`,\n              title: `New Page`,\n              index: newIndex,\n              content: [\n                {\n                  selector: \"\",\n                  props: [{ name: \"\", value: \"\" }],\n                  children: \"\",\n                },\n              ],\n            }\n            setPages([...pages, newPage])\n            setActivePage(newPage)\n          }}\n        />\n      </div>\n      <Divider />\n      {pages.map((page) => {\n        let className = \"sidebar__item\"\n        if (activePage && activePage.id === page.id) {\n          className = \"sidebar__item sidebar__item--active\"\n        }\n        return (\n          <div\n            className={className}\n            key={page.id}\n            onClick={() => {\n              setActivePage(page)\n            }}\n          >\n            {page.title}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","export function Divider() {\n  return <div className=\"divider\"></div>\n}\n","export const CHANGE = \"CHANGE\"\nexport const SET_FIELDS = \"SET_FIELDS\"\nexport const SET_MODE = \"SET_MODE\"\nexport const SET_ERRORS = \"SET_ERRORS\"\nexport const RESET = \"RESET\"\n","import { useReducer } from \"react\"\nimport { CHANGE, SET_FIELDS, SET_MODE, SET_ERRORS, RESET } from \"../types\"\n\nconst onChange = (state, payload) => {\n  const { id, value } = payload\n  return {\n    ...state,\n    values: { ...JSON.parse(JSON.stringify(state.values)), [id]: value },\n    mode: \"Changed\",\n  }\n}\n\nconst setFormFields = (state, payload) => {\n  return {\n    values: JSON.parse(JSON.stringify(payload.values)),\n    init: payload.init\n      ? JSON.parse(JSON.stringify(payload.init))\n      : JSON.parse(JSON.stringify(state.init)),\n    mode: payload.mode,\n    errors: {},\n  }\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case CHANGE:\n      return onChange(state, payload)\n    case SET_FIELDS:\n      return setFormFields(state, payload)\n    case SET_MODE:\n      return { ...JSON.parse(JSON.stringify(state)), mode: payload }\n    case SET_ERRORS:\n      return { ...JSON.parse(JSON.stringify(state)), errors: payload }\n    case RESET:\n      return {\n        ...JSON.parse(JSON.stringify(state)),\n        values: JSON.parse(JSON.stringify(state.init)),\n        mode: \"Create\",\n      }\n    default:\n      return state\n  }\n}\n\nexport function useFormFields(initialFormValues) {\n  const [state, dispatch] = useReducer(reducer, {\n    values: JSON.parse(JSON.stringify(initialFormValues)),\n    init: JSON.parse(JSON.stringify(initialFormValues)),\n    mode: \"Create\",\n    errors: {},\n  })\n\n  return [state, dispatch]\n}\n","import { useEffect } from \"react\"\nimport { useFormFields } from \"../hooks\"\nimport { CHANGE, RESET, SET_FIELDS, SET_MODE } from \"../types\"\nimport { FormField, Content } from \".\"\nimport { createPage, updatePage, deletePage } from \"../api/pages\"\n\nconst onChange = (e, dispatch) => {\n  const { name, value } = e.target\n  dispatch({ type: CHANGE, payload: { id: name, value } })\n}\n\nconst onTemplateChange = (e, dispatch, templates) => {\n  const { name, value } = e.target\n  const template = templates.find((template) => template._id === value)\n  let content = []\n  if (template) {\n    content = template.content.map((field) => {\n      const contentField = {}\n      contentField.selector = field.selector\n      if (field.props) {\n        contentField.props = field.props.map((prop) => {\n          return { name: prop.name, value: \"\" }\n        })\n      }\n      if (field.children === \"string\") {\n        contentField.children = \"\"\n      } else if (field.children === \"list\") {\n        contentField.children = [[...contentField.props]]\n      }\n      return contentField\n    })\n  }\n\n  dispatch({ type: CHANGE, payload: { id: \"content\", value: content } })\n  dispatch({ type: CHANGE, payload: { id: name, value } })\n}\n\nconst onSubmit = (values, setPages, setActivePage, dispatch) => {\n  let onSuccess = () => dispatch({ type: SET_MODE, payload: \"Create\" })\n  if (values._id) {\n    updatePage(values, setPages, onSuccess)\n  } else {\n    createPage(values, setPages, setActivePage, onSuccess)\n  }\n}\n\nexport function Page({ activePage, setActivePage, templates, setPages }) {\n  const [state, dispatch] = useFormFields({\n    id: \"\",\n    title: \"\",\n    index: \"\",\n    templateId: \"\",\n    content: [],\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: SET_FIELDS,\n      payload: { values: activePage, init: activePage, mode: \"Create\" },\n    })\n  }, [activePage, dispatch])\n\n  const { _id } = activePage\n  let saveButtonClassName =\n    !_id || state.mode === \"Changed\"\n      ? \"button mr-1\"\n      : \"button mr-1 button--disabled\"\n  return (\n    <div className=\"page\">\n      <div className=\"page__header\">\n        <h3 className=\"mr-a\">Page Details</h3>\n        <button\n          onClick={() =>\n            onSubmit(state.values, setPages, setActivePage, dispatch)\n          }\n          className={saveButtonClassName}\n        >\n          Save\n        </button>\n        <button\n          onClick={() => dispatch({ type: RESET })}\n          className={`button mr-1 ${\n            state.mode === \"Create\" ? \"button--disabled\" : \"button--reset\"\n          }`}\n        >\n          Reset\n        </button>\n        <button\n          onClick={() => deletePage(_id, setPages, () => setActivePage(\"\"))}\n          className={`button ${_id ? \"button--delete\" : \"button--disabled\"}`}\n        >\n          Delete\n        </button>\n      </div>\n      <div className=\"page__details\">\n        <FormField\n          label=\"id\"\n          field={\n            <input\n              name=\"id\"\n              value={state.values.id}\n              onChange={(e) => onChange(e, dispatch)}\n            />\n          }\n        />\n        <FormField\n          label=\"Title\"\n          field={\n            <input\n              name=\"title\"\n              value={state.values.title}\n              onChange={(e) => onChange(e, dispatch)}\n            />\n          }\n        />\n        <FormField\n          label=\"Index\"\n          field={\n            <input\n              name=\"index\"\n              value={state.values.index}\n              onChange={(e) => onChange(e, dispatch)}\n            />\n          }\n        />\n        <FormField\n          label=\"Template\"\n          field={\n            <select\n              name=\"templateId\"\n              value={state.values.templateId || \"\"}\n              onChange={(e) => onTemplateChange(e, dispatch, templates)}\n            >\n              <option value=\"\">Custom Page</option>\n              {templates.map((template) => {\n                return (\n                  <option value={template._id} key={template._id}>\n                    {template.name}\n                  </option>\n                )\n              })}\n            </select>\n          }\n        />\n      </div>\n      <div className=\"page__content\">\n        <h3>Content</h3>\n        <Content\n          template={templates.find(\n            (template) => template._id === state.values.templateId\n          )}\n          {...{ state, dispatch }}\n        />\n      </div>\n    </div>\n  )\n}\n","import axios from \"axios\"\n\nexport const getPages = (setPages) => {\n  axios\n    .get(\"https://next-chapter.herokuapp.com/api/pages/\")\n    .then((res) => {\n      setPages(res.data.sort((a, b) => a.index - b.index))\n    })\n    .catch((errors) => {\n      console.error(errors)\n      setPages({\n        errors: \"Failed to load content.\",\n      })\n    })\n}\n\nexport const createPage = (page, setPages, setActivePage, onSuccess) => {\n  axios\n    .post(\"https://next-chapter.herokuapp.com/api/pages\", page)\n    .then((res) => {\n      const { pages, id } = res.data\n      setPages(pages.sort((a, b) => a.index - b.index))\n      setActivePage(pages.find((page) => page._id === id))\n      onSuccess(id)\n    })\n    .catch((errors) => {\n      console.error(errors)\n    })\n}\n\nexport const updatePage = (page, setPages, onSuccess) => {\n  const { _id, ...rest } = page\n  axios\n    .patch(`https://next-chapter.herokuapp.com/api/pages/${_id}`, rest)\n    .then((res) => {\n      setPages(res.data.sort((a, b) => a.index - b.index))\n      onSuccess()\n    })\n    .catch((errors) => {\n      console.error(errors)\n    })\n}\n\nexport const deletePage = (id, setPages, onSuccess) => {\n  axios\n    .delete(`https://next-chapter.herokuapp.com/api/pages/${id}`)\n    .then((res) => {\n      setPages(res.data.sort((a, b) => a.index - b.index))\n      onSuccess()\n    })\n    .catch((errors) => {\n      console.error(errors)\n    })\n}\n","export function FormField({ label, field }) {\n  return (\n    <div className=\"form-field\">\n      {label && <label className=\"form-field__label\">{label}</label>}\n      {field}\n    </div>\n  )\n}\n","import { FormField } from \".\"\nimport { CHANGE } from \"../types\"\n\nexport function Content({ template, state, dispatch }) {\n  let content\n  if (template) {\n    content = template.content.map((field, fieldIndex) => {\n      if (field.children === \"list\") {\n        return (\n          <FieldList\n            key={field.selector}\n            {...{ state, dispatch, fieldIndex }}\n          />\n        )\n      }\n      return (\n        <div className=\"content__field\" key={field.selector}>\n          <FormField\n            label=\"Selector\"\n            field={\n              <input\n                disabled\n                type=\"text\"\n                name=\"selector\"\n                value={state.values.content[fieldIndex].selector}\n              />\n            }\n          />\n          {field.props.length > 0 && (\n            <div>\n              {field.props.map((prop, propIndex) => {\n                return (\n                  <FormField\n                    label={propIndex === 0 && \"Props\"}\n                    key={prop.name}\n                    field={\n                      <input\n                        type=\"text\"\n                        name={prop.name}\n                        placeholder={prop.name}\n                        value={\n                          state.values.content[fieldIndex].props[propIndex]\n                            .value\n                        }\n                        onChange={(e) => {\n                          const { value } = e.target\n                          const newContent = JSON.parse(\n                            JSON.stringify(state.values.content)\n                          )\n                          newContent[fieldIndex].props[propIndex].value = value\n                          dispatch({\n                            type: CHANGE,\n                            payload: { id: \"content\", value: newContent },\n                          })\n                        }}\n                      />\n                    }\n                  />\n                )\n              })}\n            </div>\n          )}\n          {field.children === \"string\" && (\n            <FormField\n              label=\"Value\"\n              field={\n                <textarea\n                  type=\"text\"\n                  name=\"selector\"\n                  value={state.values.content[fieldIndex].children}\n                  onChange={(e) => {\n                    const { value } = e.target\n                    const newContent = JSON.parse(\n                      JSON.stringify(state.values.content)\n                    )\n                    newContent[fieldIndex].children = value\n                    dispatch({\n                      type: CHANGE,\n                      payload: { id: \"content\", value: newContent },\n                    })\n                  }}\n                />\n              }\n            />\n          )}\n        </div>\n      )\n    })\n  } else {\n    content = (\n      <>\n        {\" \"}\n        {state.values.content.map((field, fieldIndex) => {\n          const { selector, props, children } = field\n          return (\n            <div className=\"content__field\" key={fieldIndex}>\n              <img\n                src=\"images/icons/trash-red.svg\"\n                width=\"20\"\n                height=\"20\"\n                className=\"icon--trash\"\n                onClick={() => {\n                  const newContent = JSON.parse(\n                    JSON.stringify(state.values.content)\n                  )\n                  newContent.splice(fieldIndex, 1)\n                  dispatch({\n                    type: CHANGE,\n                    payload: { id: \"content\", value: newContent },\n                  })\n                }}\n              />\n              <FormField\n                label=\"Selector\"\n                field={\n                  <input\n                    type=\"text\"\n                    name=\"selector\"\n                    value={selector}\n                    onChange={(e) => {\n                      const newContent = JSON.parse(\n                        JSON.stringify(state.values.content)\n                      )\n                      newContent[fieldIndex].selector = e.target.value\n                      dispatch({\n                        type: CHANGE,\n                        payload: {\n                          id: \"content\",\n                          value: newContent,\n                        },\n                      })\n                    }}\n                  />\n                }\n              />\n              <div className=\"ta-c\">\n                <label className=\"form-field__label\">Props</label>\n                {props.map((prop, propIndex) => {\n                  const { name, value } = prop\n                  return (\n                    <div key={propIndex} className=\"form-field__props\">\n                      <FormField\n                        field={\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            placeholder=\"Key\"\n                            onChange={(e) => {\n                              const newContent = JSON.parse(\n                                JSON.stringify(state.values.content)\n                              )\n                              newContent[fieldIndex].props[propIndex].name =\n                                e.target.value\n                              dispatch({\n                                type: CHANGE,\n                                payload: {\n                                  id: \"content\",\n                                  value: newContent,\n                                },\n                              })\n                            }}\n                          />\n                        }\n                      />\n                      <FormField\n                        field={\n                          <input\n                            type=\"text\"\n                            name=\"value\"\n                            value={value}\n                            placeholder=\"Value\"\n                            onChange={(e) => {\n                              const newContent = JSON.parse(\n                                JSON.stringify(state.values.content)\n                              )\n                              newContent[fieldIndex].props[propIndex].value =\n                                e.target.value\n                              dispatch({\n                                type: CHANGE,\n                                payload: {\n                                  id: \"content\",\n                                  value: newContent,\n                                },\n                              })\n                            }}\n                          />\n                        }\n                      />\n                      <img\n                        src=\"images/icons/trash-red.svg\"\n                        width=\"20\"\n                        height=\"20\"\n                        className=\"cur-p\"\n                        onClick={() => {\n                          const newContent = JSON.parse(\n                            JSON.stringify(state.values.content)\n                          )\n                          newContent[fieldIndex].props.splice(propIndex, 1)\n                          dispatch({\n                            type: CHANGE,\n                            payload: { id: \"content\", value: newContent },\n                          })\n                        }}\n                      />\n                    </div>\n                  )\n                })}\n                <img\n                  width=\"30\"\n                  height=\"30\"\n                  src=\"images/icons/plus-circle.svg\"\n                  alt=\"add\"\n                  onClick={() => {\n                    const newContent = JSON.parse(\n                      JSON.stringify(state.values.content)\n                    )\n                    newContent[fieldIndex].props = [\n                      ...newContent[fieldIndex].props,\n                      { name: \"\", value: \"\" },\n                    ]\n                    dispatch({\n                      type: CHANGE,\n                      payload: {\n                        id: \"content\",\n                        value: newContent,\n                      },\n                    })\n                  }}\n                />\n              </div>\n              <FormField\n                label=\"Value\"\n                field={\n                  <input\n                    type=\"text\"\n                    name=\"children\"\n                    value={children}\n                    onChange={(e) => {\n                      const newContent = JSON.parse(\n                        JSON.stringify(state.values.content)\n                      )\n                      newContent[fieldIndex].children = e.target.value\n                      dispatch({\n                        type: CHANGE,\n                        payload: {\n                          id: \"content\",\n                          value: newContent,\n                        },\n                      })\n                    }}\n                  />\n                }\n              />\n            </div>\n          )\n        })}\n        <img\n          width=\"30\"\n          height=\"30\"\n          src=\"images/icons/plus-circle.svg\"\n          alt=\"add\"\n          onClick={() => {\n            const newContent = [\n              ...JSON.parse(JSON.stringify(state.values.content)),\n              { selector: \"\", props: [{ name: \"\", value: \"\" }], children: \"\" },\n            ]\n            dispatch({\n              type: CHANGE,\n              payload: {\n                id: \"content\",\n                value: newContent,\n              },\n            })\n          }}\n        />\n      </>\n    )\n  }\n  return <div className=\"content\">{content}</div>\n}\n\nfunction FieldList({ state, dispatch, fieldIndex }) {\n  return (\n    <div className=\"content__field\">\n      <FormField\n        label=\"Selector\"\n        field={\n          <input\n            disabled\n            type=\"text\"\n            name=\"selector\"\n            value={state.values.content[fieldIndex].selector}\n          />\n        }\n      />\n      {state.values.content[fieldIndex].children.map((child, childIndex) => {\n        return (\n          <div className=\"content__field\" key={childIndex}>\n            <img\n              src=\"images/icons/trash-red.svg\"\n              width=\"20\"\n              height=\"20\"\n              className=\"icon--trash\"\n              onClick={() => {\n                const newContent = JSON.parse(\n                  JSON.stringify(state.values.content)\n                )\n                newContent[fieldIndex].children.splice(childIndex, 1)\n                dispatch({\n                  type: CHANGE,\n                  payload: { id: \"content\", value: newContent },\n                })\n              }}\n            />\n            {child.map((prop, propIndex) => {\n              return (\n                <FormField\n                  key={prop.name}\n                  field={\n                    <input\n                      type=\"text\"\n                      name={prop.name}\n                      placeholder={prop.name}\n                      value={prop.value}\n                      onChange={(e) => {\n                        const { value } = e.target\n                        const newContent = JSON.parse(\n                          JSON.stringify(state.values.content)\n                        )\n                        newContent[fieldIndex].children[childIndex][\n                          propIndex\n                        ].value = value\n                        dispatch({\n                          type: CHANGE,\n                          payload: { id: \"content\", value: newContent },\n                        })\n                      }}\n                    />\n                  }\n                />\n              )\n            })}\n          </div>\n        )\n      })}\n      <img\n        width=\"30\"\n        height=\"30\"\n        src=\"images/icons/plus-circle.svg\"\n        alt=\"add\"\n        className=\"m-a\"\n        onClick={() => {\n          const newContent = JSON.parse(JSON.stringify(state.values.content))\n          newContent[fieldIndex].children = [\n            ...newContent[fieldIndex].children,\n            [...newContent[fieldIndex].props],\n          ]\n          dispatch({\n            type: CHANGE,\n            payload: {\n              id: \"content\",\n              value: newContent,\n            },\n          })\n        }}\n      />\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { Header, Sidebar, Page } from \"./components\"\nimport { getPages } from \"./api/pages\"\nimport { getTemplates } from \"./api/templates\"\n\nfunction App() {\n  const [activePage, setActivePage] = useState()\n  const [pages, setPages] = useState([])\n  const [templates, setTemplates] = useState([])\n\n  useEffect(() => {\n    getPages(setPages)\n    getTemplates(setTemplates)\n  }, [setPages, setTemplates])\n\n  return (\n    <>\n      <Header />\n      <Sidebar {...{ pages, setPages, activePage, setActivePage }} />\n      {activePage && (\n        <Page {...{ activePage, setActivePage, templates, setPages }} />\n      )}\n    </>\n  )\n}\n\nexport default App\n","import axios from \"axios\"\n\nexport const getTemplates = (setTemplates) => {\n  axios\n    .get(\"https://next-chapter.herokuapp.com/api/templates\")\n    .then((res) => {\n      setTemplates(res.data)\n    })\n    .catch((errors) => {\n      console.error(errors)\n      setTemplates({\n        errors: \"Failed to load templates.\",\n      })\n    })\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}